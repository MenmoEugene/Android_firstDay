活动的生命周期

返回栈
	Android是使用任务(Task) 来管理活动的，一个任务就是一组存放在栈里的活动的集合，这个栈也被称作返回栈(Back Stack).
      栈是一种后进先出的数据结构，在默认情况下，每当我们启动了一个新的活动，它会在返回栈中入栈，并处于栈顶的位置。
      而每当我们按下Back键或调用finish()方法去销毁一个活动时，处于栈顶的活动会出栈，这时前一个入栈的活动就会重新处于
      栈顶的位置。系统总是会显示处于栈顶的活动给用户。

活动状态：
      运行状态、暂停状态、停止状态、销毁状态。

活动的生存周期

      Activity类中定义了7个回调方法，覆盖了活动生命周期的每一个环节。

      ◇onCreate() 它会在活动第一次被创建的时候调用。
      
      ◇onStart()  这个方法在活动由不可见变为可见的时候调用。

      ◇onResume() 这个方法在活动准备好和用户进行交互的时候调用。此时的活动一定位于返回栈的栈顶，并且处于运行状态。

      ◇onPause() 这个方法在系统准备去启动或者恢复另一个活动的时候调用。

      ◇onStop() 这个方法在活动完全不可见的时候调用。它和onPause()方法的主要区别在于，如果启动的新活动是一个对话框式的活动，
		那么onPause()方法会得到执行，而onStop() 方法并不会执行
      
      ◇onDestroy() 这个方法在活动呗销毁之前调用,之后活动的状态将变为销毁状态.

      ◇onRestart() 这个方法在活动由停止状态变为运行状态之前调用,也就是活动被重新启动了。

      以上7个方法除了 onRestart() 方法,其他都是两两相对的,从而又可以将活动分为 3种生存期。

      ■完整生存期. 活动在onCreate()方法和onDestroy()方法之间所经历的,就是完整生存期.一般情况下,一个活动会在 onCreate()
      方法中完成各种初始化操作,而在onDestroy()方法中完成释放内存的操作.

      ■可见生存期。活动在onStart()方法和onStop()方法之间所经历的,就是可见生存期.在可见生存期内,活动对于用户总是可见的,
      即便有可能无法和用户进行交互.我们可以通过这两个方法,合理地管理那些对用户可见的资源.比如在onStart()方法中对资源进行
      加载,而在onStop()方法中对资源进行释放,从而保证处于停止状态的活动不会占用过多的内存。

      ■前台生存期. 活动在onResume()方法和onPause()方法之间所经历的就是前台生存期.在前台生存期内,活动总是处于运行状态的,
      此时的活动是可以和用户进行交互的,我们平时看到和接触最多的也就是这个状态下的活动.